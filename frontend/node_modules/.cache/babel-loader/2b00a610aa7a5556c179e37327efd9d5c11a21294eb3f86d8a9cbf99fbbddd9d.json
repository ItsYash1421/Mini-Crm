{"ast":null,"code":"var _jsxFileName = \"/Users/yashkumarmeena/Desktop/Assigment/mini-crm/frontend/src/contexts/AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport config from '../config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(undefined);\n\n// Set up axios interceptor\naxios.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Add response interceptor to handle 401 errors\naxios.interceptors.response.use(response => response, error => {\n  var _error$response;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    localStorage.removeItem('token');\n    localStorage.removeItem('userInfo');\n    window.location.href = '/login';\n  }\n  return Promise.reject(error);\n});\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(() => {\n    const userInfo = localStorage.getItem('userInfo');\n    return userInfo ? JSON.parse(userInfo) : null;\n  });\n  const [isAuthenticated, setIsAuthenticated] = useState(!!localStorage.getItem('token'));\n  const login = async (token, userInfo) => {\n    localStorage.setItem('token', token);\n    localStorage.setItem('userInfo', JSON.stringify(userInfo));\n    setUser(userInfo);\n    setIsAuthenticated(true);\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('userInfo');\n    setUser(null);\n    setIsAuthenticated(false);\n  };\n\n  // Verify token on mount and token change\n  useEffect(() => {\n    const verifyToken = async () => {\n      const token = localStorage.getItem('token');\n      if (token) {\n        try {\n          const response = await axios.get(`${config.API_URL}/api/auth/me`);\n          setUser(response.data);\n          setIsAuthenticated(true);\n        } catch (error) {\n          console.error('Token verification failed:', error);\n          logout();\n        }\n      }\n    };\n    verifyToken();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      isAuthenticated,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"rZ1PjEegfWy9pyvuO1H0didn3ak=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","axios","config","jsxDEV","_jsxDEV","AuthContext","undefined","interceptors","request","use","token","localStorage","getItem","headers","Authorization","error","Promise","reject","response","_error$response","status","removeItem","window","location","href","AuthProvider","children","_s","user","setUser","userInfo","JSON","parse","isAuthenticated","setIsAuthenticated","login","setItem","stringify","logout","verifyToken","get","API_URL","data","console","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","Error","$RefreshReg$"],"sources":["/Users/yashkumarmeena/Desktop/Assigment/mini-crm/frontend/src/contexts/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, ReactNode, useEffect } from 'react';\nimport axios from 'axios';\nimport config from '../config';\n\ninterface User {\n  id: string;\n  name: string;\n  email: string;\n  picture: string;\n}\n\ninterface AuthContextType {\n  user: User | null;\n  isAuthenticated: boolean;\n  login: (token: string, userInfo: { id: string; name: string; email: string; picture: string }) => Promise<void>;\n  logout: () => void;\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\n// Set up axios interceptor\naxios.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n// Add response interceptor to handle 401 errors\naxios.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    if (error.response?.status === 401) {\n      localStorage.removeItem('token');\n      localStorage.removeItem('userInfo');\n      window.location.href = '/login';\n    }\n    return Promise.reject(error);\n  }\n);\n\nexport const AuthProvider: React.FC<{ children: ReactNode }> = ({ children }) => {\n  const [user, setUser] = useState<User | null>(() => {\n    const userInfo = localStorage.getItem('userInfo');\n    return userInfo ? JSON.parse(userInfo) : null;\n  });\n  const [isAuthenticated, setIsAuthenticated] = useState<boolean>(\n    !!localStorage.getItem('token')\n  );\n\n  const login = async (token: string, userInfo: { id: string; name: string; email: string; picture: string }) => {\n    localStorage.setItem('token', token);\n    localStorage.setItem('userInfo', JSON.stringify(userInfo));\n    setUser(userInfo);\n    setIsAuthenticated(true);\n  };\n\n  const logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('userInfo');\n    setUser(null);\n    setIsAuthenticated(false);\n  };\n\n  // Verify token on mount and token change\n  useEffect(() => {\n    const verifyToken = async () => {\n      const token = localStorage.getItem('token');\n      if (token) {\n        try {\n          const response = await axios.get(`${config.API_URL}/api/auth/me`);\n          setUser(response.data);\n          setIsAuthenticated(true);\n        } catch (error) {\n          console.error('Token verification failed:', error);\n          logout();\n        }\n      }\n    };\n\n    verifyToken();\n  }, []);\n\n  return (\n    <AuthContext.Provider value={{ user, isAuthenticated, login, logout }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n}; "],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAaC,SAAS,QAAQ,OAAO;AACxF,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAgB/B,MAAMC,WAAW,gBAAGR,aAAa,CAA8BS,SAAS,CAAC;;AAEzE;AACAL,KAAK,CAACM,YAAY,CAACC,OAAO,CAACC,GAAG,CAC3BP,MAAM,IAAK;EACV,MAAMQ,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACTR,MAAM,CAACW,OAAO,CAACC,aAAa,GAAG,UAAUJ,KAAK,EAAE;EAClD;EACA,OAAOR,MAAM;AACf,CAAC,EACAa,KAAK,IAAK;EACT,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACAd,KAAK,CAACM,YAAY,CAACW,QAAQ,CAACT,GAAG,CAC5BS,QAAQ,IAAKA,QAAQ,EACrBH,KAAK,IAAK;EAAA,IAAAI,eAAA;EACT,IAAI,EAAAA,eAAA,GAAAJ,KAAK,CAACG,QAAQ,cAAAC,eAAA,uBAAdA,eAAA,CAAgBC,MAAM,MAAK,GAAG,EAAE;IAClCT,YAAY,CAACU,UAAU,CAAC,OAAO,CAAC;IAChCV,YAAY,CAACU,UAAU,CAAC,UAAU,CAAC;IACnCC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,QAAQ;EACjC;EACA,OAAOR,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,OAAO,MAAMU,YAA+C,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC/E,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAG9B,QAAQ,CAAc,MAAM;IAClD,MAAM+B,QAAQ,GAAGnB,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;IACjD,OAAOkB,QAAQ,GAAGC,IAAI,CAACC,KAAK,CAACF,QAAQ,CAAC,GAAG,IAAI;EAC/C,CAAC,CAAC;EACF,MAAM,CAACG,eAAe,EAAEC,kBAAkB,CAAC,GAAGnC,QAAQ,CACpD,CAAC,CAACY,YAAY,CAACC,OAAO,CAAC,OAAO,CAChC,CAAC;EAED,MAAMuB,KAAK,GAAG,MAAAA,CAAOzB,KAAa,EAAEoB,QAAsE,KAAK;IAC7GnB,YAAY,CAACyB,OAAO,CAAC,OAAO,EAAE1B,KAAK,CAAC;IACpCC,YAAY,CAACyB,OAAO,CAAC,UAAU,EAAEL,IAAI,CAACM,SAAS,CAACP,QAAQ,CAAC,CAAC;IAC1DD,OAAO,CAACC,QAAQ,CAAC;IACjBI,kBAAkB,CAAC,IAAI,CAAC;EAC1B,CAAC;EAED,MAAMI,MAAM,GAAGA,CAAA,KAAM;IACnB3B,YAAY,CAACU,UAAU,CAAC,OAAO,CAAC;IAChCV,YAAY,CAACU,UAAU,CAAC,UAAU,CAAC;IACnCQ,OAAO,CAAC,IAAI,CAAC;IACbK,kBAAkB,CAAC,KAAK,CAAC;EAC3B,CAAC;;EAED;EACAlC,SAAS,CAAC,MAAM;IACd,MAAMuC,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B,MAAM7B,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAC3C,IAAIF,KAAK,EAAE;QACT,IAAI;UACF,MAAMQ,QAAQ,GAAG,MAAMjB,KAAK,CAACuC,GAAG,CAAC,GAAGtC,MAAM,CAACuC,OAAO,cAAc,CAAC;UACjEZ,OAAO,CAACX,QAAQ,CAACwB,IAAI,CAAC;UACtBR,kBAAkB,CAAC,IAAI,CAAC;QAC1B,CAAC,CAAC,OAAOnB,KAAK,EAAE;UACd4B,OAAO,CAAC5B,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;UAClDuB,MAAM,CAAC,CAAC;QACV;MACF;IACF,CAAC;IAEDC,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEnC,OAAA,CAACC,WAAW,CAACuC,QAAQ;IAACC,KAAK,EAAE;MAAEjB,IAAI;MAAEK,eAAe;MAAEE,KAAK;MAAEG;IAAO,CAAE;IAAAZ,QAAA,EACnEA;EAAQ;IAAAoB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACtB,EAAA,CA/CWF,YAA+C;AAAAyB,EAAA,GAA/CzB,YAA+C;AAiD5D,OAAO,MAAM0B,OAAO,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAC3B,MAAMC,OAAO,GAAGvD,UAAU,CAACO,WAAW,CAAC;EACvC,IAAI,CAACgD,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,6CAA6C,CAAC;EAChE;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,GAAA,CANWD,OAAO;AAAA,IAAAD,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}